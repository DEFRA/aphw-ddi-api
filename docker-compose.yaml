services:
  aphw-ddi-api:
    build:
      context: .
      target: production
    image: aphw-ddi-api
    container_name: aphw-ddi-api
    depends_on:
      - aphw-ddi-api-postgres
      - aphw-ddi-api-azurite
    environment:
      APPINSIGHTS_CLOUDROLE: aphw-ddi-api-local
      APPINSIGHTS_CONNECTIONSTRING: ${APPINSIGHTS_CONNECTIONSTRING}
      AZURE_STORAGE_ACCOUNT_NAME: ${AZURE_STORAGE_ACCOUNT_NAME:-devstoreaccount1}
      AZURE_STORAGE_USE_CONNECTION_STRING: "true"
      AZURE_STORAGE_CREATE_CONTAINERS: "true"
      AZURE_STORAGE_CONNECTION_STRING: "UseDevelopmentStorage=true"
      ROBOT_SHEET_NAME: ${ROBOT_SHEET_NAME:-Wall-E}
      ROBOT_IMPORT_POLICE_API_URL: ${ROBOT_IMPORT_POLICE_API_URL}
      POSTGRES_DB: aphw-ddi
      POSTGRES_HOST: ${POSTGRES_HOST:-aphw-ddi-api-postgres}
      POSTGRES_PORT: 5432
      POSTGRES_SCHEMA_NAME: ${POSTGRES_SCHEMA_NAME:-public}
      POSTGRES_USERNAME: ${POSTGRES_SCHEMA_USERNAME:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_SCHEMA_PASSWORD:-ppp}
      
  aphw-ddi-api-postgres:
    image: postgres:11.22-alpine
    environment:
      POSTGRES_DB: aphw-ddi
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: ppp
    volumes:
      - postgres_data:/var/lib/postgres/data

  aphw-ddi-api-azurite:
    image: mcr.microsoft.com/azure-storage/azurite:3.23.0
    command: "azurite-blob --skipApiVersionCheck --loose --blobHost 0.0.0.0"
    labels:
      com.docker.compose.pay.role: aphw-ddi-api-azurite

volumes:
  postgres_data:
